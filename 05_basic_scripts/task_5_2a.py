# -*- coding: utf-8 -*-
'''
Задание 5.2a

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.1/30 - хост из сети 10.0.5.0/30

Если пользователь ввел адрес 10.0.1.1/24,
вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях сеть/маска.

Ограничение: Все задания надо выполнять используя только пройденные темы.

'''
ipm=input("Ip вводи быстро: ")
ip=ipm[0:ipm.find('/')]
m=ipm[ipm.find('/')+1:]
print(m)
mi=int(m)

oc=ip.split('.')
ipbs='0'*(8-len(bin(int(oc[0])).lstrip('0b'))) + bin(int(oc[0])).lstrip('0b')+'0'*(8-len(bin(int(oc[1])).lstrip('0b'))) + bin(int(oc[1])).lstrip('0b')+'0'*(8-len(bin(int(oc[2])).lstrip('0b'))) + bin(int(oc[2])).lstrip('0b')+'0'*(8-len(bin(int(oc[3])).lstrip('0b'))) + bin(int(oc[3])).lstrip('0b')

#print(ipbs)
pmb=ipbs[:mi]+'0'*(32-mi)
#print(pmb)

print(f'''
----------------------------
Network
     {int(pmb[0:8], 2):<8} {int(pmb[8:16],2):<8} {int(pmb[16:24], 2):<8} {int(pmb[24:32],2):<8}
     {int(pmb[0:8]):08} {int(pmb[8:16]):08} {int(pmb[16:24]):08} {int(pmb[24:32]):08}''')



mb='1'*mi +'0'*(32-mi)
#print(mb[:8])

print(f'''
Mask
     {int(mb[0:8], 2):<8} {int(mb[8:16], 2):<8} {int(mb[16:24], 2):<8} {int(mb[24:32], 2):<8}
     {int(mb[0:8]):08} {int(mb[8:16]):08} {int(mb[16:24]):08} {int(mb[24:32]):08}''')